name: Deploy Backend to Production

on:
  push:
    branches: [ master ]
    paths:
      - 'service/**'
      - 'core/**'
      - 'go.mod'
      - 'go.sum'
      - 'main.go'
      - 'Dockerfile'
      - 'docker-compose.prod.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests
      run: go test -v ./...
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/analabit-api:latest
          ${{ secrets.DOCKER_USERNAME }}/analabit-api:${{ github.sha }}
        build-args: |
          SERVICE_NAME=api
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Aggregator image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/analabit-aggregator:latest
          ${{ secrets.DOCKER_USERNAME }}/analabit-aggregator:${{ github.sha }}
        build-args: |
          SERVICE_NAME=aggregator
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Producer image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/analabit-producer:latest
          ${{ secrets.DOCKER_USERNAME }}/analabit-producer:${{ github.sha }}
        build-args: |
          SERVICE_NAME=producer
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to production
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.PROD_HOST }}
        username: analabit
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          set -e
          
          cd /opt/analabit
          
          # Pull latest images
          docker-compose -f docker-compose.prod.yml --env-file .env.prod pull
          
          # Restart services with zero downtime
          docker-compose -f docker-compose.prod.yml --env-file .env.prod up -d
          
          # Clean up old images
          docker image prune -f
          
          # Health check
          echo "Waiting for services to be ready..."
          sleep 30
          
          # Check if API is responding
          curl -f http://localhost:8080/health || exit 1
          
          echo "Deployment successful!"
