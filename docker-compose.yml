services:
  producer:
    build:
      context: .
      dockerfile: service/producer/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "8080:8080"
    environment:
      - COMPOSE_DOCKER_CLI_BUILD=1
      - DOCKER_BUILDKIT=1
      - MICRO_REGISTRY=mdns
      - ANALABIT_CACHE_DIR=./cache
      - ANALABIT_CACHE_TTL_MINUTES=10
      - ANALABIT_DRAIN_SIM_STAGES=33,50,66,100
      - ANALABIT_DRAIN_SIM_ITERATIONS=100
      - ANALABIT_MINIO_ENDPOINT=minio:9000
      - ANALABIT_MINIO_ACCESS_KEY=minioadmin
      - ANALABIT_MINIO_SECRET_KEY=minioadmin
      - ANALABIT_MINIO_USE_SSL=false
      - ANALABIT_RABBIT_URL=amqp://guest:guest@rabbitmq:5672/
      - ANALABIT_MINIO_BUCKET_NAME=analabit-results
      - ANALABIT_SELF_QUERY_PERIOD_MINUTES=20
    depends_on:
      - minio
      - rabbitmq

  aggregator:
    build:
      context: .
      dockerfile: service/aggregator/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "8081:8081"
    environment:
      - COMPOSE_DOCKER_CLI_BUILD=1
      - DOCKER_BUILDKIT=1
      - MICRO_REGISTRY=mdns
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY_ID=minioadmin
      - MINIO_SECRET_ACCESS_KEY=minioadmin
      - MINIO_USE_SSL=false
      - MINIO_BUCKET_NAME=analabit-results
      - POSTGRES_CONN_STRINGS=host=postgres user=postgres password=postgres dbname=postgres sslmode=disable
    depends_on:
      - minio
      - rabbitmq
      - postgres

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"

  postgres:
    image: postgres:13-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

  # --- API HTTP gateway ---
  api:
    build:
      context: .
      dockerfile: service/api/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "3080:3000"
    environment:
      - SERVER_PORT=3000
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_DBNAME=postgres
      - DATABASE_SSLMODE=disable
    depends_on:
      - postgres

volumes:
  minio_data:
