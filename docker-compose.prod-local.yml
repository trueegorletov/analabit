version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: api
    depends_on:
      - rabbitmq
      - minio
      - postgres
    environment:
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      - ANALABIT_RABBIT_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      - MINIO_ENDPOINT=minio:9000
      - ANALABIT_MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - MINIO_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - ANALABIT_MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - ANALABIT_MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_USE_SSL=false
      - ANALABIT_MINIO_USE_SSL=false
      - MINIO_BUCKET_NAME=analabit-results
      - ANALABIT_MINIO_BUCKET_NAME=analabit-results
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_DBNAME=${POSTGRES_DB}
      - DATABASE_SSLMODE=disable
      - POSTGRES_CONN_STRINGS=host=postgres port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB} sslmode=disable
    ports:
      - "127.0.0.1:8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  aggregator:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: aggregator
    depends_on:
      - rabbitmq
      - minio
      - postgres
    environment:
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      - ANALABIT_RABBIT_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      - MINIO_ENDPOINT=minio:9000
      - ANALABIT_MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - MINIO_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - ANALABIT_MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - ANALABIT_MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_USE_SSL=false
      - ANALABIT_MINIO_USE_SSL=false
      - MINIO_BUCKET_NAME=analabit-results
      - ANALABIT_MINIO_BUCKET_NAME=analabit-results
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_DBNAME=${POSTGRES_DB}
      - DATABASE_SSLMODE=disable
      - POSTGRES_CONN_STRINGS=host=postgres port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB} sslmode=disable
    restart: unless-stopped

  producer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: producer
    depends_on:
      - rabbitmq
      - minio
      - postgres
    environment:
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      - ANALABIT_RABBIT_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      - MINIO_ENDPOINT=minio:9000
      - ANALABIT_MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - MINIO_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - ANALABIT_MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - ANALABIT_MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_USE_SSL=false
      - ANALABIT_MINIO_USE_SSL=false
      - MINIO_BUCKET_NAME=analabit-results
      - ANALABIT_MINIO_BUCKET_NAME=analabit-results
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_DBNAME=${POSTGRES_DB}
      - DATABASE_SSLMODE=disable
      - POSTGRES_CONN_STRINGS=host=postgres port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB} sslmode=disable
    restart: unless-stopped

volumes:
  rabbitmq_data:
  minio_data:
  postgres_data:
