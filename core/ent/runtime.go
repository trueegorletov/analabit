// Code generated by ent, DO NOT EDIT.

package ent

import (
	"analabit/core/ent/application"
	"analabit/core/ent/calculation"
	"analabit/core/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	applicationFields := schema.Application{}.Fields()
	_ = applicationFields
	// applicationDescUpdatedAt is the schema descriptor for updated_at field.
	applicationDescUpdatedAt := applicationFields[6].Descriptor()
	// application.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	application.DefaultUpdatedAt = applicationDescUpdatedAt.Default.(func() time.Time)
	// application.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	application.UpdateDefaultUpdatedAt = applicationDescUpdatedAt.UpdateDefault.(func() time.Time)
	calculationFields := schema.Calculation{}.Fields()
	_ = calculationFields
	// calculationDescUpdatedAt is the schema descriptor for updated_at field.
	calculationDescUpdatedAt := calculationFields[3].Descriptor()
	// calculation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	calculation.DefaultUpdatedAt = calculationDescUpdatedAt.Default.(func() time.Time)
	// calculation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	calculation.UpdateDefaultUpdatedAt = calculationDescUpdatedAt.UpdateDefault.(func() time.Time)
}
