// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ApplicationsColumns holds the columns for the "applications" table.
	ApplicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "student_id", Type: field.TypeString},
		{Name: "priority", Type: field.TypeInt},
		{Name: "competition_type", Type: field.TypeInt},
		{Name: "rating_place", Type: field.TypeInt},
		{Name: "score", Type: field.TypeInt},
		{Name: "original_submitted", Type: field.TypeBool, Default: false},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "run_id", Type: field.TypeInt},
		{Name: "heading_applications", Type: field.TypeInt},
	}
	// ApplicationsTable holds the schema information for the "applications" table.
	ApplicationsTable = &schema.Table{
		Name:       "applications",
		Columns:    ApplicationsColumns,
		PrimaryKey: []*schema.Column{ApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "applications_runs_run",
				Columns:    []*schema.Column{ApplicationsColumns[8]},
				RefColumns: []*schema.Column{RunsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "applications_headings_applications",
				Columns:    []*schema.Column{ApplicationsColumns[9]},
				RefColumns: []*schema.Column{HeadingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "application_run_id",
				Unique:  false,
				Columns: []*schema.Column{ApplicationsColumns[8]},
			},
			{
				Name:    "application_run_id_student_id",
				Unique:  false,
				Columns: []*schema.Column{ApplicationsColumns[8], ApplicationsColumns[1]},
			},
			{
				Name:    "application_original_submitted",
				Unique:  false,
				Columns: []*schema.Column{ApplicationsColumns[6]},
			},
		},
	}
	// CalculationsColumns holds the columns for the "calculations" table.
	CalculationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "student_id", Type: field.TypeString},
		{Name: "admitted_place", Type: field.TypeInt},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "run_id", Type: field.TypeInt},
		{Name: "heading_calculations", Type: field.TypeInt},
	}
	// CalculationsTable holds the schema information for the "calculations" table.
	CalculationsTable = &schema.Table{
		Name:       "calculations",
		Columns:    CalculationsColumns,
		PrimaryKey: []*schema.Column{CalculationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "calculations_runs_run",
				Columns:    []*schema.Column{CalculationsColumns[4]},
				RefColumns: []*schema.Column{RunsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "calculations_headings_calculations",
				Columns:    []*schema.Column{CalculationsColumns[5]},
				RefColumns: []*schema.Column{HeadingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "calculation_run_id",
				Unique:  false,
				Columns: []*schema.Column{CalculationsColumns[4]},
			},
			{
				Name:    "calculation_run_id_student_id",
				Unique:  false,
				Columns: []*schema.Column{CalculationsColumns[4], CalculationsColumns[1]},
			},
			{
				Name:    "calculation_admitted_place",
				Unique:  false,
				Columns: []*schema.Column{CalculationsColumns[2]},
			},
		},
	}
	// DrainedResultsColumns holds the columns for the "drained_results" table.
	DrainedResultsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "drained_percent", Type: field.TypeInt},
		{Name: "avg_passing_score", Type: field.TypeInt},
		{Name: "min_passing_score", Type: field.TypeInt},
		{Name: "max_passing_score", Type: field.TypeInt},
		{Name: "med_passing_score", Type: field.TypeInt},
		{Name: "avg_last_admitted_rating_place", Type: field.TypeInt},
		{Name: "min_last_admitted_rating_place", Type: field.TypeInt},
		{Name: "max_last_admitted_rating_place", Type: field.TypeInt},
		{Name: "med_last_admitted_rating_place", Type: field.TypeInt},
		{Name: "run_id", Type: field.TypeInt},
		{Name: "heading_drained_results", Type: field.TypeInt},
	}
	// DrainedResultsTable holds the schema information for the "drained_results" table.
	DrainedResultsTable = &schema.Table{
		Name:       "drained_results",
		Columns:    DrainedResultsColumns,
		PrimaryKey: []*schema.Column{DrainedResultsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "drained_results_runs_run",
				Columns:    []*schema.Column{DrainedResultsColumns[10]},
				RefColumns: []*schema.Column{RunsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "drained_results_headings_drained_results",
				Columns:    []*schema.Column{DrainedResultsColumns[11]},
				RefColumns: []*schema.Column{HeadingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "drainedresult_run_id",
				Unique:  false,
				Columns: []*schema.Column{DrainedResultsColumns[10]},
			},
			{
				Name:    "drainedresult_run_id_drained_percent",
				Unique:  false,
				Columns: []*schema.Column{DrainedResultsColumns[10], DrainedResultsColumns[1]},
			},
			{
				Name:    "drainedresult_drained_percent",
				Unique:  false,
				Columns: []*schema.Column{DrainedResultsColumns[1]},
			},
		},
	}
	// HeadingsColumns holds the columns for the "headings" table.
	HeadingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "regular_capacity", Type: field.TypeInt},
		{Name: "target_quota_capacity", Type: field.TypeInt},
		{Name: "dedicated_quota_capacity", Type: field.TypeInt},
		{Name: "special_quota_capacity", Type: field.TypeInt},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "varsity_headings", Type: field.TypeInt},
	}
	// HeadingsTable holds the schema information for the "headings" table.
	HeadingsTable = &schema.Table{
		Name:       "headings",
		Columns:    HeadingsColumns,
		PrimaryKey: []*schema.Column{HeadingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "headings_varsities_headings",
				Columns:    []*schema.Column{HeadingsColumns[7]},
				RefColumns: []*schema.Column{VarsitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RunsColumns holds the columns for the "runs" table.
	RunsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "triggered_at", Type: field.TypeTime},
		{Name: "payload_meta", Type: field.TypeJSON, Nullable: true},
	}
	// RunsTable holds the schema information for the "runs" table.
	RunsTable = &schema.Table{
		Name:       "runs",
		Columns:    RunsColumns,
		PrimaryKey: []*schema.Column{RunsColumns[0]},
	}
	// VarsitiesColumns holds the columns for the "varsities" table.
	VarsitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
	}
	// VarsitiesTable holds the schema information for the "varsities" table.
	VarsitiesTable = &schema.Table{
		Name:       "varsities",
		Columns:    VarsitiesColumns,
		PrimaryKey: []*schema.Column{VarsitiesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ApplicationsTable,
		CalculationsTable,
		DrainedResultsTable,
		HeadingsTable,
		RunsTable,
		VarsitiesTable,
	}
)

func init() {
	ApplicationsTable.ForeignKeys[0].RefTable = RunsTable
	ApplicationsTable.ForeignKeys[1].RefTable = HeadingsTable
	CalculationsTable.ForeignKeys[0].RefTable = RunsTable
	CalculationsTable.ForeignKeys[1].RefTable = HeadingsTable
	DrainedResultsTable.ForeignKeys[0].RefTable = RunsTable
	DrainedResultsTable.ForeignKeys[1].RefTable = HeadingsTable
	HeadingsTable.ForeignKeys[0].RefTable = VarsitiesTable
}
