// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ApplicationsColumns holds the columns for the "applications" table.
	ApplicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "student_id", Type: field.TypeString},
		{Name: "priority", Type: field.TypeInt},
		{Name: "competition_type", Type: field.TypeInt},
		{Name: "rating_place", Type: field.TypeInt},
		{Name: "score", Type: field.TypeInt},
		{Name: "iteration", Type: field.TypeInt},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "heading_applications", Type: field.TypeInt},
	}
	// ApplicationsTable holds the schema information for the "applications" table.
	ApplicationsTable = &schema.Table{
		Name:       "applications",
		Columns:    ApplicationsColumns,
		PrimaryKey: []*schema.Column{ApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "applications_headings_applications",
				Columns:    []*schema.Column{ApplicationsColumns[8]},
				RefColumns: []*schema.Column{HeadingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CalculationsColumns holds the columns for the "calculations" table.
	CalculationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "student_id", Type: field.TypeString},
		{Name: "admitted_place", Type: field.TypeInt},
		{Name: "iteration", Type: field.TypeInt},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "heading_calculations", Type: field.TypeInt},
	}
	// CalculationsTable holds the schema information for the "calculations" table.
	CalculationsTable = &schema.Table{
		Name:       "calculations",
		Columns:    CalculationsColumns,
		PrimaryKey: []*schema.Column{CalculationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "calculations_headings_calculations",
				Columns:    []*schema.Column{CalculationsColumns[5]},
				RefColumns: []*schema.Column{HeadingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// HeadingsColumns holds the columns for the "headings" table.
	HeadingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "regular_capacity", Type: field.TypeInt},
		{Name: "target_quota_capacity", Type: field.TypeInt},
		{Name: "dedicated_quota_capacity", Type: field.TypeInt},
		{Name: "special_quota_capacity", Type: field.TypeInt},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "varsity_headings", Type: field.TypeInt},
	}
	// HeadingsTable holds the schema information for the "headings" table.
	HeadingsTable = &schema.Table{
		Name:       "headings",
		Columns:    HeadingsColumns,
		PrimaryKey: []*schema.Column{HeadingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "headings_varsities_headings",
				Columns:    []*schema.Column{HeadingsColumns[7]},
				RefColumns: []*schema.Column{VarsitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MetadataColumns holds the columns for the "metadata" table.
	MetadataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "last_applications_iteration", Type: field.TypeInt},
		{Name: "last_calculations_iteration", Type: field.TypeInt},
		{Name: "uploading_lock", Type: field.TypeBool},
	}
	// MetadataTable holds the schema information for the "metadata" table.
	MetadataTable = &schema.Table{
		Name:       "metadata",
		Columns:    MetadataColumns,
		PrimaryKey: []*schema.Column{MetadataColumns[0]},
	}
	// VarsitiesColumns holds the columns for the "varsities" table.
	VarsitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
	}
	// VarsitiesTable holds the schema information for the "varsities" table.
	VarsitiesTable = &schema.Table{
		Name:       "varsities",
		Columns:    VarsitiesColumns,
		PrimaryKey: []*schema.Column{VarsitiesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ApplicationsTable,
		CalculationsTable,
		HeadingsTable,
		MetadataTable,
		VarsitiesTable,
	}
)

func init() {
	ApplicationsTable.ForeignKeys[0].RefTable = HeadingsTable
	CalculationsTable.ForeignKeys[0].RefTable = HeadingsTable
	HeadingsTable.ForeignKeys[0].RefTable = VarsitiesTable
}
