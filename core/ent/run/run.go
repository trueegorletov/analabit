// Code generated by ent, DO NOT EDIT.

package run

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the run type in the database.
	Label = "run"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTriggeredAt holds the string denoting the triggered_at field in the database.
	FieldTriggeredAt = "triggered_at"
	// FieldPayloadMeta holds the string denoting the payload_meta field in the database.
	FieldPayloadMeta = "payload_meta"
	// FieldFinished holds the string denoting the finished field in the database.
	FieldFinished = "finished"
	// FieldFinishedAt holds the string denoting the finished_at field in the database.
	FieldFinishedAt = "finished_at"
	// Table holds the table name of the run in the database.
	Table = "runs"
)

// Columns holds all SQL columns for run fields.
var Columns = []string{
	FieldID,
	FieldTriggeredAt,
	FieldPayloadMeta,
	FieldFinished,
	FieldFinishedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultTriggeredAt holds the default value on creation for the "triggered_at" field.
	DefaultTriggeredAt func() time.Time
	// DefaultFinished holds the default value on creation for the "finished" field.
	DefaultFinished bool
	// DefaultFinishedAt holds the default value on creation for the "finished_at" field.
	DefaultFinishedAt func() time.Time
)

// OrderOption defines the ordering options for the Run queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTriggeredAt orders the results by the triggered_at field.
func ByTriggeredAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTriggeredAt, opts...).ToFunc()
}

// ByFinished orders the results by the finished field.
func ByFinished(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFinished, opts...).ToFunc()
}

// ByFinishedAt orders the results by the finished_at field.
func ByFinishedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFinishedAt, opts...).ToFunc()
}
